{"version":3,"sources":["Home/Home.js","Navbar/Navbar.js","FooterBar/footerbar.js","SortingVisualizer/Bar/Bar.js","Algorithms/Sorting/MergeSort.js","SortingVisualizer/SortingVisualizer.js","Algorithms/Sorting/BubbleSort.js","PathfindingVisualizer/Node/Node.js","Algorithms/PathFinding Algorithms/dijkstra.js","PathfindingVisualizer/PathfindingVisualizer.js","HeapVisualizer/HeapVisualizer.js","SVG/svg.js","routes/routes.js","App.js","index.js"],"names":["Home","className","to","type","class","React","Component","NavBar","Fragment","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","href","FooterBar","getMergeSortAnimations","array","animations","endingAnimations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","lastRound","k","i","j","push","doMerge","SortingVisualizer","props","state","primaryColor","secondaryColor","animationSpeed","this","resetArray","min","max","maxHeight","window","screen","height","value","random","setState","arrayBars","document","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","isSorted","counter","temp","console","log","getBubbleSortAnimations","last","tempheight","map","idx","onClick","mergeSort","bubbleSort","Node","col","isFinish","isStart","isWall","onMouseDown","onMouseEnter","onMouseUp","row","extraClassName","dijkstra","grid","startNode","finishNode","visitedNodesInOrder","distance","unvisitedNodes","nodes","node","getAllNodes","sortNodesByDistance","closestNode","shift","Infinity","isVisited","updateUnvisitedNeighbors","sort","nodeA","nodeB","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","previousNode","getNewGridWithWallToggled","newGrid","newNode","PathfindingVisualizer","getInitialGrid","currentRow","createNode","START_NODE_ROW","START_NODE_COL","FINISH_NODE_ROW","FINISH_NODE_COL","mouseIsPressed","mouseOnStartNode","mouseOnFinishNode","new_node","old_node","oldNode","updateStartNode","updateFinishNode","nodesInShortestPathOrder","animateShortestPath","getElementById","currentNode","unshift","getNodesInShortestPathOrder","animateDijkstra","y","x","visualizeDijkstra","clearGrid","rowIdx","nodeIdx","handleMouseDown","handleMouseEnter","handleMouseUp","HeapVisualizer","width","d","stroke","stroke-width","cx","cy","fill","r","font-family","font-size","font-weight","text-anchor","generateRandomArray","num","output","index","renderGraph","outputStringArray","SVG","viewBox","border","renderJapanFlag","renderOrnament","SortingAlgorithmRoute","match","exact","path","url","component","Routes","PathFindingVisualizer","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.331ce045.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Home extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return(<div className=\"container \">\r\n            <h1>WELCOME TO THE HOME OF VISUALIZED ALGORITHMS</h1>\r\n            <Link to=\"/sorting\"><button type=\"button\" class=\"btn btn-primary\">Sorting Algorithms</button></Link>\r\n            <Link to=\"/pathfinding\"><button type=\"button\" class=\"btn btn-primary\">Path Finding Algorithms</button></Link>\r\n            <Link to=\"/heaps\"><button type=\"button\" class=\"btn btn-primary\">Heaps Algorithms</button></Link>\r\n            <Link to=\"/svg\"><button type=\"button\" class=\"btn btn-primary\">SVG</button></Link>\r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default Home","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NavBar extends React.Component{\r\n    render()\r\n    {\r\n        return(<React.Fragment>\r\n            <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                    <div class=\"container-fluid\">\r\n                        <Link class=\"navbar-brand\" to=\"/\">Visual Algo</Link>\r\n                        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span class=\"navbar-toggler-icon\"></span>\r\n                        </button>\r\n                        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" href=\"#\">Merge Sort</Link>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" href=\"#\">Quick Sort</Link>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" href=\"#\">Bubble Sort</Link>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" href=\"#\">Merge Sort</Link>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" href=\"#\">Selection Sort</Link>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" href=\"#\">Random Quick Sort</Link>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" href=\"#\">Counting Sort</Link>\r\n                            </li>\r\n                            <li class=\"nav-item\">\r\n                                <Link class=\"nav-link\" href=\"#\">Radix Sort</Link>\r\n                            </li>\r\n                        </ul>\r\n                        </div>\r\n                    </div>\r\n                 </nav>\r\n                 </React.Fragment>)\r\n    }\r\n}\r\n\r\n\r\nexport default NavBar","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass FooterBar extends React.Component\r\n{\r\n    render()\r\n    {\r\n        return( <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div class=\"container-fluid\">\r\n            <Link class=\"navbar-brand\" to=\"/\">Visual Algo</Link>\r\n            <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span class=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                <li class=\"nav-item\">\r\n                    <Link class=\"nav-link\" href=\"#\">Merge Sort</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <Link class=\"nav-link\" href=\"#\">Quick Sort</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <Link class=\"nav-link\" href=\"#\">Bubble Sort</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <Link class=\"nav-link\" href=\"#\">Merge Sort</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <Link class=\"nav-link\" href=\"#\">Selection Sort</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <Link class=\"nav-link\" href=\"#\">Random Quick Sort</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <Link class=\"nav-link\" href=\"#\">Counting Sort</Link>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <Link class=\"nav-link\" href=\"#\">Radix Sort</Link>\r\n                </li>\r\n            </ul>\r\n            </div>\r\n        </div>\r\n     </nav>)\r\n    }\r\n}\r\n\r\n\r\nexport default FooterBar","import React from 'react'\r\n\r\nclass Bar extends React.Component\r\n{\r\n\r\n    render()\r\n    {\r\n        const{\r\n            value,\r\n            idx,\r\n            primaryColor\r\n        } = this.props\r\n        \r\n        return(<div\r\n            className=\"array-bar\"\r\n            key={idx}\r\n            style={{height: `${value}px`, backgroundColor: primaryColor}}\r\n            >       \r\n        </div>)\r\n    }\r\n}\r\n\r\n\r\nexport default Bar","let originalArrayLength = 0\r\n\r\nexport function getMergeSortAnimations(array) {\r\n    const animations = [];\r\n    const endingAnimations = []\r\n    if (array.length <= 1) return array;\r\n    originalArrayLength = array.length\r\n    const auxiliaryArray = array.slice();\r\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations, endingAnimations);\r\n    return {animations, endingAnimations};\r\n  }\r\n  \r\n  //for final merge color change, we can do \r\n  function mergeSortHelper(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n    endingAnimations\r\n  ) {\r\n    if (startIdx === endIdx) return;\r\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n   \r\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations, endingAnimations);\r\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations, endingAnimations);\r\n\r\n    let lastRound = false\r\n    if(middleIdx == (Math.floor((startIdx + mainArray.length-1) / 2)) && startIdx == 0 && endIdx ==  mainArray.length-1)\r\n        lastRound = true\r\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations, endingAnimations, lastRound);\r\n  }\r\n  \r\n  function doMerge(\r\n    mainArray,\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n    endingAnimations,\r\n    lastRound\r\n  ) {\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n\r\n    if(lastRound)\r\n    {\r\n        while (i <= middleIdx && j <= endIdx) {\r\n            // These are the values that we're comparing; we push them once\r\n            // to change their color.\r\n            endingAnimations.push([i, j]);\r\n            // These are the values that we're comparing; we push them a second\r\n            // time to revert their color.\r\n            endingAnimations.push([i, j]);\r\n            if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n              // We overwrite the value at index k in the original array with the\r\n              // value at index i in the auxiliary array.\r\n              endingAnimations.push([k, auxiliaryArray[i]]);\r\n              mainArray[k++] = auxiliaryArray[i++];\r\n            } else {\r\n              // We overwrite the value at index k in the original array with the\r\n              // value at index j in the auxiliary array.\r\n              endingAnimations.push([k, auxiliaryArray[j]]);\r\n              mainArray[k++] = auxiliaryArray[j++];\r\n            }\r\n          }\r\n          while (i <= middleIdx) {\r\n            // These are the values that we're comparing; we push them once\r\n            // to change their color.\r\n            endingAnimations.push([i, i]);\r\n            // These are the values that we're comparing; we push them a second\r\n            // time to revert their color.\r\n            endingAnimations.push([i, i]);\r\n            // We overwrite the value at index k in the original array with the\r\n            // value at index i in the auxiliary array.\r\n            endingAnimations.push([k, auxiliaryArray[i]]);\r\n            mainArray[k++] = auxiliaryArray[i++];\r\n          }\r\n          while (j <= endIdx) {\r\n            // These are the values that we're comparing; we push them once\r\n            // to change their color.\r\n            endingAnimations.push([j, j]);\r\n            // These are the values that we're comparing; we push them a second\r\n            // time to revert their color.\r\n            endingAnimations.push([j, j]);\r\n            // We overwrite the value at index k in the original array with the\r\n            // value at index j in the auxiliary array.\r\n            endingAnimations.push([k, auxiliaryArray[j]]);\r\n            mainArray[k++] = auxiliaryArray[j++];\r\n          }\r\n    }else\r\n    {\r\n        while (i <= middleIdx && j <= endIdx) {\r\n            // These are the values that we're comparing; we push them once\r\n            // to change their color.\r\n            animations.push([i, j]);\r\n            // These are the values that we're comparing; we push them a second\r\n            // time to revert their color.\r\n            animations.push([i, j]);\r\n            if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n              // We overwrite the value at index k in the original array with the\r\n              // value at index i in the auxiliary array.\r\n              animations.push([k, auxiliaryArray[i]]);\r\n              mainArray[k++] = auxiliaryArray[i++];\r\n            } else {\r\n              // We overwrite the value at index k in the original array with the\r\n              // value at index j in the auxiliary array.\r\n              animations.push([k, auxiliaryArray[j]]);\r\n              mainArray[k++] = auxiliaryArray[j++];\r\n            }\r\n          }\r\n          while (i <= middleIdx) {\r\n            // These are the values that we're comparing; we push them once\r\n            // to change their color.\r\n            animations.push([i, i]);\r\n            // These are the values that we're comparing; we push them a second\r\n            // time to revert their color.\r\n            animations.push([i, i]);\r\n            // We overwrite the value at index k in the original array with the\r\n            // value at index i in the auxiliary array.\r\n            animations.push([k, auxiliaryArray[i]]);\r\n            mainArray[k++] = auxiliaryArray[i++];\r\n          }\r\n          while (j <= endIdx) {\r\n            // These are the values that we're comparing; we push them once\r\n            // to change their color.\r\n            animations.push([j, j]);\r\n            // These are the values that we're comparing; we push them a second\r\n            // time to revert their color.\r\n            animations.push([j, j]);\r\n            // We overwrite the value at index k in the original array with the\r\n            // value at index j in the auxiliary array.\r\n            animations.push([k, auxiliaryArray[j]]);\r\n            mainArray[k++] = auxiliaryArray[j++];\r\n          }\r\n    }\r\n    \r\n  }","import React from 'react'\r\nimport './SortingVisualizer.css'\r\n\r\n//IMPORTS\r\nimport NavBar from '../Navbar/Navbar'\r\nimport FooterBar from '../FooterBar/footerbar'\r\nimport Bar from './Bar/Bar'\r\n\r\n//ALGORITHM IMPORTS\r\nimport {getMergeSortAnimations} from '../Algorithms/Sorting/MergeSort';\r\nimport {getBubbleSortAnimations} from '../Algorithms/Sorting/BubbleSort';\r\n\r\n\r\nfunction randomIntFromInterval(min, max)\r\n{\r\n    return Math.floor(Math.random() * (max - min + 1)+min)\r\n}\r\n\r\nexport default class SortingVisualizer extends React.Component{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n\r\n        this.state = {\r\n            array: [],\r\n            primaryColor: 'turquoise',\r\n            secondaryColor: 'red',\r\n            animationSpeed: 100\r\n        }\r\n    }\r\n\r\n\r\n\r\n    componentDidMount()\r\n    {\r\n        this.resetArray()\r\n    }\r\n\r\n    resetArray()\r\n    {\r\n        const array = []\r\n        let barAmount = Math.floor(window.screen.height/5)\r\n        let maxHeight = Math.floor(window.screen.height - 150)\r\n        for(let i  = 0; i < 20; i++)\r\n        {\r\n            let value = randomIntFromInterval(5, maxHeight)\r\n            //array.push(<Bar value={value} idx={i} primaryColor={this.state.primaryColor}></Bar>)\r\n            array.push(value);\r\n        }\r\n\r\n        this.setState({array})\r\n    }\r\n\r\n    mergeSort()\r\n    {\r\n        const {animations, endingAnimations} = getMergeSortAnimations(this.state.array);\r\n        \r\n        for (let i = 0; i < animations.length; i++) {\r\n          const arrayBars = document.getElementsByClassName('array-bar');\r\n          const isColorChange = i % 3 !== 2;\r\n          if (isColorChange) {\r\n            const [barOneIdx, barTwoIdx] = animations[i];\r\n            const barOneStyle = arrayBars[barOneIdx].style;\r\n            const barTwoStyle = arrayBars[barTwoIdx].style;\r\n            const color = i % 3 === 0 ? this.state.secondaryColor : this.state.primaryColor;\r\n            setTimeout(() => {\r\n              barOneStyle.backgroundColor = color;\r\n              barTwoStyle.backgroundColor = color;\r\n            }, i * this.state.animationSpeed);\r\n          } else {\r\n            setTimeout(() => {\r\n              const [barOneIdx, newHeight] = animations[i];\r\n              const barOneStyle = arrayBars[barOneIdx].style;\r\n              barOneStyle.height = `${newHeight}px`;\r\n            }, i * this.state.animationSpeed);\r\n          }\r\n        }\r\n\r\n        setTimeout(() => {\r\n            for (let i = 0; i < endingAnimations.length; i++) {\r\n                const arrayBars = document.getElementsByClassName('array-bar');\r\n                const isColorChange = i % 3 !== 2;\r\n                if (isColorChange) {\r\n                  const [barOneIdx, barTwoIdx] = endingAnimations[i];\r\n                  const barOneStyle = arrayBars[barOneIdx].style;\r\n                  const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                  const color = i % 3 === 0 ? this.state.secondaryColor : this.state.primaryColor;\r\n                  setTimeout(() => {\r\n                    barOneStyle.backgroundColor = \"black\";\r\n                  }, i * this.state.animationSpeed);\r\n                } else {\r\n                  setTimeout(() => {\r\n                    const [barOneIdx, newHeight] = endingAnimations[i];\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${newHeight}px`;\r\n                    barOneStyle.backgroundColor = \"black\";\r\n                  }, i * this.state.animationSpeed);\r\n                }\r\n              }\r\n        }, (animations.length * this.state.animationSpeed)+100)\r\n    }\r\n\r\n    bubbleSort()\r\n    {\r\n        let animations = getBubbleSortAnimations(this.state.array)\r\n        let last = this.state.array.length -1\r\n        \r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            if(animations[i][2] == \"swap\")\r\n            {\r\n              let barOneIdx = animations[i][0]\r\n              let barTwoIdx = animations[i][1]\r\n              const barOneStyle = arrayBars[barOneIdx].style;\r\n              const barTwoStyle = arrayBars[barTwoIdx].style;\r\n\r\n              setTimeout(() => {\r\n                barOneStyle.backgroundColor = this.state.secondaryColor;\r\n                barTwoStyle.backgroundColor = this.state.secondaryColor;\r\n                let tempheight = barOneStyle.height\r\n                barOneStyle.height = barTwoStyle.height;\r\n                barTwoStyle.height = tempheight;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = this.state.primaryColor;\r\n                    \r\n                    if(barTwoIdx == last)\r\n                    {\r\n                        console.log(barTwoIdx)\r\n                        last --\r\n                        barTwoStyle.backgroundColor = \"black\"\r\n                    }else\r\n                    {\r\n                        barTwoStyle.backgroundColor = this.state.primaryColor;\r\n                    }\r\n                }, i)\r\n                \r\n              }, i * this.state.animationSpeed);\r\n            \r\n            }\r\n            \r\n          }\r\n    }\r\n\r\n    heapSort()\r\n    {\r\n\r\n    }\r\n\r\n\r\n    render()\r\n    {\r\n       \r\n        \r\n        return(\r\n            <React.Fragment >\r\n                \r\n                <NavBar></NavBar>\r\n                <div className=\"container\"> \r\n                    <div className=\"array-container\">\r\n                       {/* {this.state.array.map(value => {\r\n                           return value\r\n                       })} */}\r\n                       {this.state.array.map((value, idx) => (\r\n                        <div\r\n                            className=\"array-bar\"\r\n                            key={idx}\r\n                            style={{\r\n                            backgroundColor: this.state.primaryColor,\r\n                            height: `${value}px`,\r\n                            }}></div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                \r\n                <button onClick={() => {this.resetArray()}}>Generate Random Array</button>\r\n                <button onClick={() => {this.mergeSort()}}>Merge Sort</button>\r\n                <button onClick={() => {this.bubbleSort()}}>Bubble Sort</button>\r\n                <FooterBar></FooterBar>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n\r\n    \r\n}","export function getBubbleSortAnimations(array)\r\n{\r\n    const animations = [];\r\n\r\n    let isSorted = false\r\n    let counter = 0\r\n    while(!isSorted)\r\n    {\r\n        isSorted = true\r\n        for(let i = 0; i < array.length - 1 - counter; i++)\r\n        {\r\n            animations.push([i,i+1, \"compare\"])\r\n            if(array[i] > array[i+1])\r\n            {\r\n                animations.push([i,i+1, \"swap\"])\r\n                let temp = array[i]\r\n                array[i] = array[i+1]\r\n                array[i+1] = temp\r\n                isSorted= false\r\n            }\r\n        }\r\n        counter++\r\n    }\r\n\r\n    // for(let i = 0; i < array.length; i++)\r\n    // {\r\n    //     for(let j = 0; j < (array.length-i-1); j++)\r\n    //     {\r\n    //         animations.push([i,j, \"compare\"])\r\n    //         if(array[j] > array[j+1])\r\n    //         {\r\n    //             if(j == (array.length-i -2))\r\n    //             {\r\n    //                 animations.push([j,j+1, \"end\"])\r\n    //             }else\r\n    //             {\r\n    //                 animations.push([j,j+1, \"swap\"])\r\n    //             }\r\n                \r\n    //             let temp = array[j]\r\n    //             array[j] = array[j+1]\r\n    //             array[j+1] = temp\r\n    //         }\r\n    //     }\r\n       \r\n    // }\r\n    console.log(array)\r\n    return animations\r\n}","import React, {Component} from 'react';\r\n\r\nimport './Node.css';\r\n\r\nexport default class Node extends Component {\r\n  render() {\r\n    const {\r\n      col,\r\n      isFinish,\r\n      isStart,\r\n      isWall,\r\n      onMouseDown,\r\n      onMouseEnter,\r\n      onMouseUp,\r\n      row,\r\n    } = this.props;\r\n    const extraClassName = isFinish\r\n      ? 'node-finish'\r\n      : isStart\r\n      ? 'node-start'\r\n      : isWall\r\n      ? 'node-wall'\r\n      : '';\r\n\r\n    return (\r\n      <div\r\n        id={`node-${row}-${col}`}\r\n        className={`node ${extraClassName}`}\r\n        onMouseDown={() => onMouseDown(row, col)}\r\n        onMouseEnter={() => onMouseEnter(row, col)}\r\n        onMouseUp={() => onMouseUp()}></div>\r\n    );\r\n  }\r\n}","// Performs Dijkstra's algorithm; returns *all* nodes in the order\r\n// in which they were visited. Also makes nodes point back to their\r\n// previous node, effectively allowing us to compute the shortest path\r\n// by backtracking from the finish node.\r\nexport function dijkstra(grid, startNode, finishNode) {\r\n    const visitedNodesInOrder = [];\r\n    console.log(\"Start Node: \" , startNode)\r\n    startNode.distance = 0;\r\n    const unvisitedNodes = getAllNodes(grid);\r\n    while (!!unvisitedNodes.length) {\r\n      sortNodesByDistance(unvisitedNodes);\r\n      const closestNode = unvisitedNodes.shift();\r\n      // If we encounter a wall, we skip it.\r\n      if (closestNode.isWall) continue;\r\n      // If the closest node is at a distance of infinity,\r\n      // we must be trapped and should therefore stop.\r\n      if (closestNode.distance === Infinity) return visitedNodesInOrder;\r\n      closestNode.isVisited = true;\r\n      visitedNodesInOrder.push(closestNode);\r\n      if (closestNode === finishNode) return visitedNodesInOrder;\r\n      updateUnvisitedNeighbors(closestNode, grid);\r\n    }\r\n  }\r\n  \r\n  function sortNodesByDistance(unvisitedNodes) {\r\n    unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n  }\r\n  \r\n  function updateUnvisitedNeighbors(node, grid) {\r\n    const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n    for (const neighbor of unvisitedNeighbors) {\r\n      neighbor.distance = node.distance + 1;\r\n      neighbor.previousNode = node;\r\n    }\r\n  }\r\n  \r\n  function getUnvisitedNeighbors(node, grid) {\r\n    const neighbors = [];\r\n    const {col, row} = node;\r\n    if (row > 0) neighbors.push(grid[row - 1][col]);\r\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n    if (col > 0) neighbors.push(grid[row][col - 1]);\r\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n    return neighbors.filter(neighbor => !neighbor.isVisited);\r\n  }\r\n  \r\n  function getAllNodes(grid) {\r\n    const nodes = [];\r\n    for (const row of grid) {\r\n      for (const node of row) {\r\n        nodes.push(node);\r\n      }\r\n    }\r\n    return nodes;\r\n  }\r\n  \r\n  // Backtracks from the finishNode to find the shortest path.\r\n  // Only works when called *after* the dijkstra method above.\r\n  export function getNodesInShortestPathOrder(finishNode) {\r\n    const nodesInShortestPathOrder = [];\r\n    let currentNode = finishNode;\r\n    while (currentNode !== null) {\r\n      nodesInShortestPathOrder.unshift(currentNode);\r\n      currentNode = currentNode.previousNode;\r\n    }\r\n    return nodesInShortestPathOrder;\r\n  }","import React, {Component} from 'react';\r\nimport Node from './Node/Node';\r\nimport NavBar from '../Navbar/Navbar'\r\n\r\n\r\nimport './PathfindingVisualizer.css';\r\n\r\n//Algorithm Imports\r\nimport {dijkstra, getNodesInShortestPathOrder} from '../Algorithms/PathFinding Algorithms/dijkstra';\r\n\r\n\r\n\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n  const newGrid = grid.slice();\r\n  const node = newGrid[row][col];\r\n  const newNode = {\r\n      ...node,\r\n      isWall: !node.isWall,\r\n  };\r\n  newGrid[row][col] = newNode;\r\n  return newGrid;\r\n};\r\n\r\nexport default class PathfindingVisualizer extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      grid: [],\r\n      row: 25,\r\n      col: 50,\r\n      mouseIsPressed: false,\r\n      START_NODE_ROW: 10,\r\n      START_NODE_COL: 15,\r\n      FINISH_NODE_ROW: 10,\r\n      FINISH_NODE_COL: 35,\r\n      mouseOnStartNode: false,\r\n      mouseOnFinishNode: false\r\n    };\r\n  }\r\n\r\n  getInitialGrid = () => {\r\n      const grid = [];\r\n      for (let row = 0; row < this.state.row; row++) {\r\n          const currentRow = [];\r\n          for (let col = 0; col < this.state.col; col++) {\r\n              currentRow.push(this.createNode(col, row));\r\n          }\r\n          grid.push(currentRow);\r\n      }\r\n      return grid;\r\n  };\r\n\r\n  createNode = (col, row) => {\r\n      return {\r\n          col,\r\n          row,\r\n          isStart: row === this.state.START_NODE_ROW && col === this.state.START_NODE_COL,\r\n          isFinish: row === this.state.FINISH_NODE_ROW && col === this.state.FINISH_NODE_COL,\r\n          distance: Infinity,\r\n          isVisited: false,\r\n          isWall: false,\r\n          previousNode: null,\r\n      };\r\n  };\r\n\r\n  componentDidMount() {\r\n    const grid = this.getInitialGrid();\r\n    this.setState({grid});\r\n  }\r\n\r\n  updateStartNode(row, col)\r\n  {\r\n    const newGrid = this.state.grid.slice();\r\n\r\n\r\n    //set old to none, set new to start\r\n    const new_node = newGrid[row][col];\r\n    const old_node = newGrid[this.state.START_NODE_ROW][this.state.START_NODE_COL]\r\n\r\n    const oldNode = {\r\n      ...old_node,\r\n      isWall: false,\r\n      isStart:false,\r\n    };\r\n    newGrid[this.state.START_NODE_ROW][this.state.START_NODE_COL] = oldNode;\r\n\r\n    this.setState({START_NODE_ROW: row, START_NODE_COL:col})\r\n    const newNode = {\r\n        ...new_node,\r\n        isWall: false,\r\n        isStart: true,\r\n    };\r\n    newGrid[row][col] = newNode;\r\n\r\n    return newGrid;\r\n  }\r\n\r\n  updateFinishNode(row, col)\r\n  {\r\n    const newGrid = this.state.grid.slice();\r\n\r\n\r\n    //set old to none, set new to start\r\n    const new_node = newGrid[row][col];\r\n    const old_node = newGrid[this.state.FINISH_NODE_ROW][this.state.FINISH_NODE_COL]\r\n\r\n    const oldNode = {\r\n      ...old_node,\r\n      isWall: false,\r\n      isFinish:false,\r\n    };\r\n    newGrid[this.state.FINISH_NODE_ROW][this.state.FINISH_NODE_COL] = oldNode;\r\n\r\n    this.setState({FINISH_NODE_ROW: row, FINISH_NODE_COL:col})\r\n    const newNode = {\r\n        ...new_node,\r\n        isWall: false,\r\n        isFinish: true,\r\n    };\r\n    newGrid[row][col] = newNode;\r\n\r\n    return newGrid;\r\n  }\r\n\r\n  handleMouseDown(row, col) \r\n  {\r\n    //check if it is start node or finish node\r\n    if(row == this.state.START_NODE_ROW && col == this.state.START_NODE_COL)\r\n    {\r\n      this.setState({mouseIsPressed: true, mouseOnStartNode:true})\r\n      return\r\n    }else if(row == this.state.FINISH_NODE_ROW && col == this.state.FINISH_NODE_COL)\r\n    {\r\n      this.setState({mouseIsPressed: true, mouseOnFinishNode:true})\r\n      return\r\n    }\r\n\r\n    //else it is a wall you want to toggle on or off\r\n    const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n    this.setState({grid: newGrid, mouseIsPressed: true});\r\n  }\r\n\r\n  handleMouseEnter(row, col) {\r\n    if (!this.state.mouseIsPressed) return;\r\n\r\n    if(this.state.mouseOnStartNode)\r\n    {\r\n      const newGrid = this.updateStartNode(row,col)\r\n      this.setState({grid: newGrid});\r\n    }else if(this.state.mouseOnFinishNode)\r\n    {\r\n      const newGrid = this.updateFinishNode(row,col)\r\n      this.setState({grid: newGrid});\r\n    }else{\r\n      const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n      this.setState({grid: newGrid});\r\n    }\r\n  }\r\n\r\n  handleMouseUp() {\r\n    this.setState({mouseIsPressed: false, mouseOnStartNode:false, mouseOnFinishNode:false});\r\n  }\r\n\r\n  animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n    for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n        if (i === visitedNodesInOrder.length) {\r\n          setTimeout(() => {\r\n            this.animateShortestPath(nodesInShortestPathOrder);\r\n          }, 10 * i);\r\n          return;\r\n        }\r\n        setTimeout(() => {\r\n          const node = visitedNodesInOrder[i];\r\n          document.getElementById(`node-${node.row}-${node.col}`).className =\r\n            'node node-visited';\r\n        }, 10 * i);\r\n    }\r\n  }\r\n\r\n  animateShortestPath(nodesInShortestPathOrder) {\r\n    for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n      setTimeout(() => {\r\n        const node = nodesInShortestPathOrder[i];\r\n        document.getElementById(`node-${node.row}-${node.col}`).className =\r\n          'node node-shortest-path';\r\n      }, 50 * i);\r\n    }\r\n  }\r\n\r\n  visualizeDijkstra() {\r\n    const startNode = this.state.grid[this.state.START_NODE_ROW][this.state.START_NODE_COL];\r\n    const finishNode = this.state.grid[this.state.FINISH_NODE_ROW][this.state.FINISH_NODE_COL];\r\n    const visitedNodesInOrder = dijkstra(this.state.grid, startNode, finishNode);\r\n    const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n    this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n  }\r\n\r\n  clearGrid()\r\n  {\r\n    let grid = []\r\n    for(let y = 0; y < this.state.grid.length; y++)\r\n    {\r\n        let currentRow = []\r\n        for(let x= 0; x < this.state.grid[y].length; x++)\r\n        {\r\n          document.getElementById(`node-${y}-${x}`).className = 'node'\r\n          currentRow.push(this.createNode(x, y))\r\n        }\r\n        grid.push(currentRow)\r\n    }\r\n\r\n    \r\n    //set up the position for start and finish\r\n    this.setState({grid})\r\n    document.getElementById(`node-${this.state.START_NODE_ROW}-${this.state.START_NODE_COL}`).className = 'node node-start'\r\n    document.getElementById(`node-${this.state.FINISH_NODE_ROW}-${this.state.FINISH_NODE_COL}`).className = 'node node-finish'\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n      <NavBar></NavBar>\r\n        <button onClick={() => this.visualizeDijkstra()}>\r\n          Visualize Dijkstra's Algorithm\r\n        </button>\r\n        <button onClick={() => this.clearGrid()}>\r\n          Clear Grid\r\n        </button>\r\n        <div className=\"container\">\r\n            <div className=\" grid\">\r\n                {this.state.grid.map((row, rowIdx) => {\r\n                    return (\r\n                    <div key={rowIdx}>\r\n                        {row.map((node, nodeIdx) => {\r\n                        const {row, col, isFinish, isStart, isWall} = node;\r\n                        return (\r\n                            <Node\r\n                                key={nodeIdx}\r\n                                col={col}\r\n                                isFinish={isFinish}\r\n                                isStart={isStart}\r\n                                isWall={isWall}\r\n                                mouseIsPressed={this.state.mouseIsPressed}\r\n                                onMouseDown={(row, col) => this.handleMouseDown(row, col)}\r\n                                onMouseEnter={(row, col) =>\r\n                                    this.handleMouseEnter(row, col)\r\n                                }\r\n                                onMouseUp={() => this.handleMouseUp()}\r\n                                row={row}>\r\n                            </Node>\r\n                        );\r\n                        })}\r\n                    </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n","import React from 'react'\r\nimport NavBar from '../Navbar/Navbar'\r\n\r\n//css\r\nimport './HeapVisualizer.css'\r\n\r\n\r\nclass HeapVisualizer extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props)\r\n        this.state={\r\n            array: []\r\n        }\r\n    }\r\n\r\n    renderGraph()\r\n    {\r\n        return(<svg width=\"1000\" height=\"600\">\r\n            <g id=\"edge\">\r\n                <path id=\"e2\" class=\"ude\" d=\"M434.2469998754255,52.800533355479914L240.75300012457453,87.19946664452009\" stroke=\"#333\" stroke-width=\"3\"></path>\r\n                <path id=\"e3\" class=\"ude\" d=\"M465.7530001245745,52.800533355479914L659.2469998754254,87.19946664452009\" stroke=\"#333\" stroke-width=\"3\"></path>\r\n                <path id=\"e4\" class=\"ude\" d=\"M209.92456495553375,95.36015468247689L127.57543504446625,124.63984531752311\" stroke=\"#333\" stroke-width=\"3\"></path>\r\n                <path id=\"e5\" class=\"ude\" d=\"M240.07543504446625,95.36015468247689L322.42456495553375,124.63984531752311\" stroke=\"#333\" stroke-width=\"3\"></path>\r\n                <path id=\"e6\" class=\"ude\" d=\"M659.9245649555337,95.36015468247689L577.5754350444663,124.63984531752311\" stroke=\"#333\" stroke-width=\"3\"></path>\r\n                <path id=\"e7\" class=\"ude\" d=\"M690.0754350444663,95.36015468247689L772.4245649555337,124.63984531752311\" stroke=\"#333\" stroke-width=\"3\"></path>\r\n                <path id=\"e8\" class=\"ude\" d=\"M99.46071480689992,139.27238058176005L69.28928519310008,160.72761941823995\" stroke=\"#333\" stroke-width=\"3\"></path>\r\n                <path id=\"e9\" class=\"ude\" d=\"M125.53928519310008,139.27238058176005L155.71071480689992,160.72761941823995\" stroke=\"#333\" stroke-width=\"3\"></path>\r\n                <path id=\"e10\" class=\"ude\" d=\"M324.46071480689994,139.27238058176005L294.2892851931001,160.72761941823995\" stroke=\"#333\" stroke-width=\"3\"></path>\\\r\n            </g>\r\n\r\n            <g id=\"vertex\">\r\n                <circle class=\"v1\" cx=\"56.25\" cy=\"170\" x=\"40.25\" y=\"154\" fill=\"#333333\" r=\"16\" stroke=\"#333333\" stroke-width=\"2\" height=\"32\" width=\"32\"></circle>\r\n                <circle class=\"v1\" cx=\"56.25\" cy=\"170\" x=\"41.25\" y=\"155\" fill=\"#eee\" r=\"14\" width=\"30\" height=\"30\" stroke=\"#fff\" stroke-width=\"0\"></circle>\r\n                <circle class=\"v2\" cx=\"562.5\" cy=\"130\" x=\"546.5\" y=\"114\" fill=\"#333333\" r=\"16\" stroke=\"#333333\" stroke-width=\"2\" height=\"32\" width=\"32\"></circle>\r\n                <circle class=\"v2\" cx=\"562.5\" cy=\"130\" x=\"547.5\" y=\"115\" fill=\"#eeeeee\" r=\"14\" width=\"30\" height=\"30\" stroke=\"#fff\" stroke-width=\"0\"></circle>\r\n                <circle class=\"v3\" cx=\"337.5\" cy=\"130\" x=\"321.5\" y=\"114\" fill=\"#333333\" r=\"16\" stroke=\"#333333\" stroke-width=\"2\" height=\"32\" width=\"32\"></circle>\r\n                <circle class=\"v3\" cx=\"337.5\" cy=\"130\" x=\"322.5\" y=\"115\" fill=\"#eeeeee\" r=\"14\" width=\"30\" height=\"30\" stroke=\"#fff\" stroke-width=\"0\"></circle>\r\n                <circle class=\"v4\" cx=\"112.5\" cy=\"130\" x=\"96.5\" y=\"114\" fill=\"#333333\" r=\"16\" stroke=\"#333333\" stroke-width=\"2\" height=\"32\" width=\"32\"></circle>\r\n                <circle class=\"v4\" cx=\"112.5\" cy=\"130\" x=\"97.5\" y=\"115\" fill=\"#eeeeee\" r=\"14\" width=\"30\" height=\"30\" stroke=\"#fff\" stroke-width=\"0\"></circle>\r\n                <circle class=\"v5\" cx=\"281.25\" cy=\"170\" x=\"265.25\" y=\"154\" fill=\"#333333\" r=\"16\" stroke=\"#333333\" stroke-width=\"2\" height=\"32\" width=\"32\"></circle>\r\n                <circle class=\"v5\" cx=\"281.25\" cy=\"170\" x=\"266.25\" y=\"155\" fill=\"#eeeeee\" r=\"14\" width=\"30\" height=\"30\" stroke=\"#fff\" stroke-width=\"0\"></circle>\r\n                <circle class=\"v6\" cx=\"675\" cy=\"90\" x=\"659\" y=\"74\" fill=\"#333333\" r=\"16\" stroke=\"#333333\" stroke-width=\"2\" height=\"32\" width=\"32\"></circle>\r\n                <circle class=\"v6\" cx=\"675\" cy=\"90\" x=\"660\" y=\"75\" fill=\"#eeeeee\" r=\"14\" width=\"30\" height=\"30\" stroke=\"#fff\" stroke-width=\"0\"></circle>\r\n                <circle class=\"v7\" cx=\"787.5\" cy=\"130\" x=\"771.5\" y=\"114\" fill=\"#333333\" r=\"16\" stroke=\"#333333\" stroke-width=\"2\" height=\"32\" width=\"32\"></circle>\r\n                <circle class=\"v7\" cx=\"787.5\" cy=\"130\" x=\"772.5\" y=\"115\" fill=\"#eeeeee\" r=\"14\" width=\"30\" height=\"30\" stroke=\"#fff\" stroke-width=\"0\"></circle>\r\n                <circle class=\"v8\" cx=\"450\" cy=\"50\" x=\"434\" y=\"34\" fill=\"#333333\" r=\"16\" stroke=\"#333333\" stroke-width=\"2\" height=\"32\" width=\"32\"></circle>\r\n                <circle class=\"v8\" cx=\"450\" cy=\"50\" x=\"435\" y=\"35\" fill=\"#eeeeee\" r=\"14\" width=\"30\" height=\"30\" stroke=\"#fff\" stroke-width=\"0\"></circle>\r\n                <circle class=\"v9\" cx=\"168.75\" cy=\"170\" x=\"152.75\" y=\"154\" fill=\"#333333\" r=\"16\" stroke=\"#333333\" stroke-width=\"2\" height=\"32\" width=\"32\"></circle>\r\n                <circle class=\"v9\" cx=\"168.75\" cy=\"170\" x=\"153.75\" y=\"155\" fill=\"#eeeeee\" r=\"14\" width=\"30\" height=\"30\" stroke=\"#fff\" stroke-width=\"0\"></circle>\r\n                <circle class=\"v10\" cx=\"225\" cy=\"90\" x=\"209\" y=\"74\" fill=\"#333333\" r=\"16\" stroke=\"#333333\" stroke-width=\"2\" height=\"32\" width=\"32\"></circle>\r\n                <circle class=\"v10\" cx=\"225\" cy=\"90\" x=\"210\" y=\"75\" fill=\"#eeeeee\" r=\"14\" width=\"30\" height=\"30\" stroke=\"#fff\" stroke-width=\"0\"></circle>\r\n            </g>\r\n            <g id=\"vertexText\">\r\n                <text class=\"v1\" x=\"56.25\" y=\"175.33333333333334\" fill=\"#333333\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">2</text>\r\n                <text class=\"v1\" x=\"56.25\" y=\"201.33333333333334\" fill=\"red\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">8</text>\r\n                <text class=\"v2\" x=\"562.5\" y=\"135.33333333333334\" fill=\"#333333\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">7</text>\r\n                <text class=\"v2\" x=\"562.5\" y=\"161.33333333333334\" fill=\"red\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">6</text>\r\n                <text class=\"v3\" x=\"337.5\" y=\"135.33333333333334\" fill=\"#333333\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">26</text>\r\n                <text class=\"v3\" x=\"337.5\" y=\"161.33333333333334\" fill=\"red\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">5</text>\r\n                <text class=\"v4\" x=\"112.5\" y=\"135.33333333333334\" fill=\"#333333\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">25</text>\r\n                <text class=\"v4\" x=\"112.5\" y=\"161.33333333333334\" fill=\"red\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">4</text>\r\n                <text class=\"v5\" x=\"281.25\" y=\"175.33333333333334\" fill=\"#333333\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">19</text>\r\n                <text class=\"v5\" x=\"281.25\" y=\"201.33333333333334\" fill=\"red\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">10</text>\r\n                <text class=\"v6\" x=\"675\" y=\"95.33333333333333\" fill=\"#333333\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">17</text>\r\n                <text class=\"v6\" x=\"675\" y=\"121.33333333333333\" fill=\"red\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">3</text>\r\n                <text class=\"v7\" x=\"787.5\" y=\"135.33333333333334\" fill=\"#333333\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">1</text>\r\n                <text class=\"v7\" x=\"787.5\" y=\"161.33333333333334\" fill=\"red\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">7</text>\r\n                <text class=\"v8\" x=\"450\" y=\"55.333333333333336\" fill=\"#333333\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">90</text>\r\n                <text class=\"v8\" x=\"450\" y=\"81.33333333333334\" fill=\"red\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">1</text>\r\n                <text class=\"v9\" x=\"168.75\" y=\"175.33333333333334\" fill=\"#333333\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">3</text>\r\n                <text class=\"v9\" x=\"168.75\" y=\"201.33333333333334\" fill=\"red\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">9</text>\r\n                <text class=\"v10\" x=\"225\" y=\"95.33333333333333\" fill=\"#333333\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">36</text>\r\n                <text class=\"v10\" x=\"225\" y=\"121.33333333333333\" fill=\"red\" font-family=\"'PT Sans', sans-serif\" font-size=\"16\" font-weight=\"bold\" text-anchor=\"middle\">2</text>\r\n            </g>\r\n\r\n        </svg>)\r\n    }\r\n\r\n    renderVisualizedArray()\r\n    {\r\n\r\n    }\r\n\r\n    componentDidMount()\r\n    {\r\n        this.generateRandomArray()\r\n    }\r\n\r\n    generateRandomArray()\r\n    {\r\n        let array = []\r\n\r\n        while(array.length < 10)\r\n        {\r\n            let num = Math.floor((Math.random() * 100) + 1);\r\n            array.push(num)\r\n        }\r\n\r\n        this.setState({array})\r\n    }\r\n\r\n    outputStringArray(array)\r\n    {\r\n        let output = ''\r\n        array.map((value, index) => {\r\n\r\n            (index != array.length-1)? output += (value + ', ') : output += (value)\r\n        })\r\n\r\n        return output\r\n    }\r\n    \r\n    render()\r\n    {\r\n        return(<React.Fragment>\r\n        <NavBar></NavBar>\r\n        <h1>\r\n            Heap\r\n        </h1>\r\n        <button>Min Heap</button>\r\n        <button>Max Heap</button>\r\n        <button onClick={() => {this.generateRandomArray()}}>Generate Random Array</button>\r\n        <div id=\"viz\">\r\n            {this.renderGraph()}\r\n        </div>\r\n        <h1>Previous Array: {\"[\"} {this.outputStringArray(this.state.array)} {\"]\"}</h1> \r\n        </React.Fragment>)\r\n    }\r\n}\r\n\r\n\r\nexport default HeapVisualizer","import React from 'react'\r\n\r\nclass SVG extends React.Component\r\n{\r\n\r\n    renderJapanFlag()\r\n    {\r\n        return (\r\n        <svg width=\"100\" height=\"100\" viewBox=\"0 0 100 100\" style={{border:\"1px solid gray\"}} >\r\n            <circle cx=\"50\" cy=\"50\" r=\"25\" fill=\"red\" stroke=\"black\"></circle>\r\n        </svg>)\r\n    }\r\n\r\n\r\n    renderOrnament()\r\n    {\r\n        return(\r\n            <svg width=\"200\" height=\"200\" viewBox=\"-100 -100 200 200\">\r\n                <circle cx=\"0\" cy=\"20\" r=\"70\" fill=\"#D1495B\"></circle>\r\n                <circle cx=\"0\" cy=\"-75\" r=\"12\" fill=\"none\" stroke=\"#F79257\" stroke-width=\"2\"></circle>\r\n                <rect x=\"-17.5\" y=\"-65\" width=\"35\" height=\"20\" fill=\"#F79257\"></rect>\r\n            </svg>)\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(<React.Fragment>\r\n            <div className=\"container\">\r\n                <h1>Scalable Vector Graphic</h1>\r\n                {this.renderJapanFlag()}\r\n                {this.renderOrnament()}\r\n            </div>\r\n        </React.Fragment>)\r\n    }\r\n}\r\n\r\n\r\nexport default SVG;","import React from 'react'\r\nimport {BrowserRouter, Route} from 'react-router-dom'\r\n\r\nimport Home from '../Home/Home'\r\n\r\n\r\n//Algorithm Page\r\nimport SortingVisualizer from '../SortingVisualizer/SortingVisualizer'\r\nimport PathFindingVisualizer from '../PathfindingVisualizer/PathfindingVisualizer'\r\nimport HeapVisualizer from '../HeapVisualizer/HeapVisualizer'\r\nimport SVG from '../SVG/svg'\r\n\r\nconst SortingAlgorithmRoute = ({ match }) => (\r\n    <div>\r\n        <Route exact path={match.url} component={SortingVisualizer}/>\r\n    </div>\r\n)\r\n\r\nlet Routes = () => {\r\n    return (<div>\r\n        <BrowserRouter>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route exact path=\"/Algorithm-Visualizer\" component={Home}/>\r\n            <Route exact path=\"/sorting\" component={SortingAlgorithmRoute}/>\r\n            <Route exact path=\"/pathfinding\" component={PathFindingVisualizer}/>\r\n            <Route exact path=\"/heaps\" component={HeapVisualizer}/>\r\n            <Route exact path=\"/SVG\" component={SVG}/>\r\n        </BrowserRouter>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default Routes","import Routes from './routes/routes'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Routes></Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}